{"version":3,"sources":["../node_modules/g-sheets-api/dist/gsheetsapi.js","../node_modules/g-sheets-api/dist/gsheetsprocessor.js","../node_modules/g-sheets-api/dist/index.js","../src/index.js"],"names":["accordionBehavior","accordionLinks","document","getElementsByClassName","Array","prototype","map","call","accordionLink","target","getAttribute","onclick","accordionBlock","getElementById","classList","contains","remove","add","compactLinks","value","split","item","trim","startsWith","filter","v","pop","join","addProjectTable","options","sheetId","returnAllResults","results","row","toLowerCase","includes","innerHTML"],"mappings":";;;AAAA,aAEA,OAAA,eAAA,QAAA,aAAA,CACA,OAAA,IAEA,QAAA,aAAA,EAEA,IAAA,EAAA,SAAA,GACA,IACA,IAAA,EAAA,+CAAA,OAAA,EAAA,uCACA,OAAA,MAAA,GAAA,KAAA,SAAA,GACA,IAAA,EAAA,GACA,MAAA,IAAA,MAAA,wBAGA,OAAA,EAAA,SACA,KAAA,SAAA,GACA,IAAA,EAAA,EAAA,QAAA,+BAAA,IAAA,MAAA,GAAA,GACA,OAAA,KAAA,MAAA,KAEA,MAAA,GAEA,OADA,QAAA,IAAA,qBAAA,OAAA,IACA,KAIA,EAAA,EACA,QAAA,QAAA;;AC3BA,aAEA,OAAA,eAAA,QAAA,aAAA,CACA,OAAA,IAEA,QAAA,aAAA,EAEA,IAAA,EAAA,EAAA,QAAA,oBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAEA,SAAA,EAAA,EAAA,GACA,IACA,QAAA,IAAA,GAAA,EAAA,cAAA,QAAA,EAAA,cAAA,OACA,OAAA,EAEA,MAAA,GAEA,OADA,QAAA,IAAA,yBAAA,OAAA,EAAA,WACA,EAGA,OAAA,EAKA,SAAA,EAAA,EAAA,GAGA,OAAA,EAAA,OAAA,SAAA,GACA,IAAA,GAAA,EAEA,aAAA,IAAA,GAAA,EAAA,QAAA,GAAA,OAAA,KAAA,GAAA,QAAA,KAIA,OAAA,KAAA,GAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,GAEA,EAAA,EAAA,GAEA,EAAA,EAAA,EAAA,KAEA,KAIA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,MAGA,EAAA,CAAA,IACA,EAAA,GACA,GAAA,EACA,GAAA,EACA,OAAA,EAEA,IACA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CACA,IACA,EADA,EAAA,MACA,QAEA,EAAA,EAAA,GAEA,EAAA,EAAA,IAEA,EAAA,EAAA,IAEA,EAAA,EAAA,GAGA,EAtBA,EAuBA,EAAA,GAAA,EAAA,oBAIA,IAAA,EAAA,KACA,EAAA,GAAA,SAGA,IAAA,GAAA,EAAA,OAAA,IACA,EAAA,GAAA,GAAA,KAIA,MAAA,GACA,GAAA,EACA,EAAA,EACA,QACA,IACA,GAAA,MAAA,EAAA,QACA,EAAA,SAEA,QACA,GAAA,EACA,MAAA,GASA,OAJA,EAAA,EAAA,OAAA,SAAA,GACA,OAAA,OAAA,KAAA,GAAA,SAGA,IAAA,EACA,EAGA,EAAA,EAAA,GAGA,IAAA,EAAA,SAAA,EAAA,IACA,EAAA,EAAA,SAAA,EAAA,SAAA,KAAA,SAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,mBAAA,EAAA,EAAA,SAAA,GACA,EAAA,MAIA,EAAA,EACA,QAAA,QAAA;;ACvHA,aAEA,OAAA,eAAA,QAAA,aAAA,CACA,OAAA,IAEA,QAAA,aAAA,EAEA,IAAA,EAAA,EAAA,QAAA,0BAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAEA,IAAA,EAAA,SAAA,EAAA,IACA,EAAA,EAAA,SAAA,EAAA,SAAA,GACA,EAAA,MAIA,OAAA,QAAA,EACA,IAAA,EAAA,EACA,QAAA,QAAA;;ACmDe,aAtEf,QAAA,wBAEA,IAAA,EAAA,EAAA,QAAA,iBAoEe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAlEf,IAAMA,EAAoB,WAClBC,IAAAA,EAAiBC,SAASC,uBAAuB,YAEvDC,MAAMC,UAAUC,IAAIC,KAAKN,EAAgB,SAAAO,GACjCC,IAAAA,EAASD,EAAcE,aAAa,eAC1CF,EAAcG,QAAU,WAChBC,IAAAA,EAAiBV,SAASW,eAAeJ,GAC3CG,EAAeE,UAAUC,SAAS,QACpCH,EAAeE,UAAUE,OAAO,QAEhCJ,EAAeE,UAAUG,IAAI,YAM/BC,EAAe,SAAAC,GACZA,OAAAA,EACJC,MAAM,OACNd,IAAI,SAAAe,GACCA,OAAAA,EAAKC,OAAOC,WAAW,QACNF,YAAAA,OAAAA,EAASA,MAAAA,OAAAA,EACzBD,MAAM,KACNI,OAAO,SAAAC,GAAK,QAAEA,IACdC,MAHH,OAKKL,IAERM,KAAK,MAGJC,EAAkB,YAKTC,EAAAA,EAAAA,SAJG,CACdC,QAAS,+CACTC,kBAAkB,GAEE,SAASC,GAAS,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACtBA,IAAAA,IAIZ,EAJYA,EAAAA,EAAQR,OAAO,SAASS,GAC/BA,OAAAA,EAAI,gEACRC,cACAC,SAAS,OACV,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAJKF,IAAAA,EAIL,EAAA,MACGA,EAAI,uBACLA,EAAI,qBAAuB,aAE/B/B,SAASW,eAAe,gBAAgBuB,WAG/BH,oCAAAA,OAAAA,EAAI,qBAAyCA,sBAAAA,OAAAA,EAAI,wBAG1Df,mCAAAA,OAAAA,EAAae,EAAI,gBAGjBf,kCAAAA,OAAAA,EAAae,EAAI,oBAGjBA,+BAAAA,OAAAA,EAAI,oEAZJ,6BAToC,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,OA6B1CjC,IACA4B","file":"src.dc906978.js","sourceRoot":"../public","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar gsheetsAPI = function gsheetsAPI(sheetId) {\n  try {\n    var sheetsUrl = \"https://spreadsheets.google.com/feeds/cells/\".concat(sheetId, \"/1/public/values?alt=json-in-script\");\n    return fetch(sheetsUrl).then(function (response) {\n      if (!response.ok) {\n        throw new Error('Error fetching sheet');\n      }\n\n      return response.text();\n    }).then(function (resultText) {\n      var formattedText = resultText.replace('gdata.io.handleScriptLoaded(', '').slice(0, -2);\n      return JSON.parse(formattedText);\n    });\n  } catch (err) {\n    console.log(\"gsheetsAPI error: \".concat(err));\n    return {};\n  }\n};\n\nvar _default = gsheetsAPI;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gsheetsapi = _interopRequireDefault(require(\"./gsheetsapi.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matchValues(valToMatch, valToMatchAgainst) {\n  try {\n    if (typeof valToMatch != 'undefined' && valToMatch.toLowerCase().trim() == valToMatchAgainst.toLowerCase().trim()) {\n      return true;\n    }\n  } catch (e) {\n    console.log(\"error in matchValues: \".concat(e.message));\n    return false;\n  }\n\n  return false;\n}\n\n;\n\nfunction filterResults(resultsToFilter, filter) {\n  var filteredData = []; // now we have a list of rows, we can filter by various things\n\n  return resultsToFilter.filter(function (item) {\n    var addRow = false;\n\n    if (typeof item === 'undefined' || item.length <= 0 || Object.keys(item).length <= 0) {\n      return false;\n    }\n\n    Object.keys(filter).forEach(function (key) {\n      var filterValue = filter[key]; // e.g. 'archaeology'\n\n      var itemValue = item[key]; // e.g. 'department' or 'undefined'\n\n      addRow = matchValues(itemValue, filterValue);\n    });\n    return addRow;\n  });\n}\n\nfunction processGSheetResults(JSONResponse, returnAllResults, filter) {\n  var data = JSONResponse.feed.entry;\n  var startRow = 2; // skip the header row(1), don't need it\n\n  var processedResults = [{}];\n  var colNames = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      var cell = item['gs$cell']; // gets cell data\n\n      var val = cell['$t']; // gets cell value\n\n      var columnNum = cell['col']; // gets the col number\n\n      var thisRow = cell['row']; // gets the row number\n\n      var colNameToAdd = colNames[columnNum]; // careful, this will be undefined if we hit it on the first pass\n      // don't add this row to the return data, but add it to list of column names\n\n      if (thisRow < startRow) {\n        colNames[columnNum] = val.toLowerCase();\n        continue; // skip the header row\n      }\n\n      if (typeof processedResults[thisRow] === 'undefined') {\n        processedResults[thisRow] = {};\n      }\n\n      if (typeof colNameToAdd !== 'undefined' && colNameToAdd.length > 0) {\n        processedResults[thisRow][colNameToAdd] = val;\n      }\n    } // make sure we're only returning valid, filled data items\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  processedResults = processedResults.filter(function (result) {\n    return Object.keys(result).length;\n  }); // if we're not filtering, then return all results\n\n  if (returnAllResults || !filter) {\n    return processedResults;\n  }\n\n  return filterResults(processedResults, filter);\n}\n\nvar gsheetProcessor = function gsheetProcessor(options, callback) {\n  (0, _gsheetsapi.default)(options.sheetId).then(function (result) {\n    var filteredResults = processGSheetResults(result, options.returnAllResults || false, options.filter || false);\n    callback(filteredResults);\n  });\n};\n\nvar _default = gsheetProcessor;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gsheetsprocessor = _interopRequireDefault(require(\"./gsheetsprocessor.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar reader = function reader(options, callback) {\n  (0, _gsheetsprocessor.default)(options, function (results) {\n    callback(results);\n  });\n};\n\nmodule.exports = reader;\nvar _default = reader;\nexports.default = _default;","import \"./styles/styles.scss\";\n\nimport GSheetReader from \"g-sheets-api\";\n\nconst accordionBehavior = () => {\n  const accordionLinks = document.getElementsByClassName(\"faq-link\");\n\n  Array.prototype.map.call(accordionLinks, accordionLink => {\n    const target = accordionLink.getAttribute(\"data-target\");\n    accordionLink.onclick = () => {\n      const accordionBlock = document.getElementById(target);\n      if (accordionBlock.classList.contains(\"show\")) {\n        accordionBlock.classList.remove(\"show\");\n      } else {\n        accordionBlock.classList.add(\"show\");\n      }\n    };\n  });\n};\n\nconst compactLinks = value => {\n  return value\n    .split(/\\s+/)\n    .map(item => {\n      if (item.trim().startsWith(\"http\")) {\n        return `<a href=\"${item}\">${item\n          .split(\"/\")\n          .filter(v => !!v) // Remove empty values\n          .pop()}<a>`;\n      }\n      return item;\n    })\n    .join(\" \");\n};\n\nconst addProjectTable = () => {\n  const options = {\n    sheetId: \"1H0dZ-NaYcgTyVwL3GK1cWE3pSH2R4hcsYdnSF9QIhmA\",\n    returnAllResults: true\n  };\n  GSheetReader(options, function(results) {\n    for (let row of results.filter(function(row) {\n      return row[\"autorizo que incluyan estos datos en la web de pycamp espa√±a\"]\n        .toLowerCase()\n        .includes(\"s\");\n    })) {\n      if (!row['url del proyecto ']) {\n          row['url del proyecto '] = \"#projects\";\n      }\n      document.getElementById(\"project-rows\").innerHTML += `\n  <tr>\n    <td>\n    <a href=\"${row['url del proyecto ']}\" target=\"_blank\">${row[\"nombre del proyecto \"]}</a>\n    </td>\n    <td>\n    ${compactLinks(row[\"descripci√≥n\"])}\n    </td>\n       <td>\n    ${compactLinks(row[\"requerimientos \"])}\n    </td>\n    <td>\n    ${row[\"nivel de conocimiento requerido con skill principal del proyecto\"]}\n    </td>\n  </tr>\n  `;\n    }\n  });\n};\n\naccordionBehavior();\naddProjectTable();\n"]}